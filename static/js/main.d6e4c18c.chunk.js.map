{"version":3,"sources":["components/ProductItem.tsx","components/Memocomponent.tsx","components/ProductList.tsx","App.tsx","index.tsx"],"names":["ProductItem","this","props","productsKey","id","color","name","activeId","isTakenPosition","keyPressHandler","clickActiveHandler","clickTakeHandler","console","log","buttonStyle","border","type","onKeyPress","onClick","event","onContextMenu","className","classNames","style","React","PureComponent","Memocomponent","memo","products","map","product","ProductList","state","preventDefault","key","newProducts","newActiveId","push","slice","setState","prevState","length","sortByIdHandler","currentActiveProductId","sortedProducts","sort","a","b","findIndex","item","sortByColorHandler","localeCompare","sortByNameHandler","nextProps","nextState","borderRadius","width","margin","i","Component","App","productsFromServer","age","addYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6e4c18c.chunk.js","sourcesContent":["import React from 'react';\nimport './ProductItem.scss';\nimport classNames from 'classnames';\n\ntype Props = {\n  productsKey: number;\n  id: number;\n  name: string;\n  color: string;\n  activeId: number;\n  isTakenPosition: boolean;\n  keyPressHandler: (event: any) => void;\n  clickActiveHandler: (event: any, id: number) => void;\n  clickTakeHandler: (event: any, id: number) => void;\n};\n\nexport class ProductItem extends React.PureComponent<Props> {\n  render() {\n    const {\n      productsKey,\n      id,\n      color,\n      name,\n      activeId,\n      isTakenPosition,\n      keyPressHandler,\n      clickActiveHandler,\n      clickTakeHandler,\n    } = this.props;\n\n    // eslint-disable-next-line no-console\n    console.log('ProductItem', name, color);\n\n    const buttonStyle = {\n      border: `2px solid ${color}`,\n    };\n\n    return (\n      <div>\n        <button\n          type=\"button\"\n          onKeyPress={keyPressHandler}\n          onClick={event => clickActiveHandler(event, productsKey)}\n          onContextMenu={event => clickTakeHandler(event, productsKey)}\n          className={classNames(\n            'ProductItem',\n            { 'ProductItem--active': productsKey === activeId && !isTakenPosition },\n            { 'ProductItem--taken': productsKey === activeId && isTakenPosition },\n          )}\n          style={buttonStyle}\n        >\n          {productsKey}\n          &nbsp;\n          {name}\n          &nbsp;\n          {color}\n          &nbsp;\n          {id}\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Product } from '../types/Product';\n\ntype Props = {\n  products: Product[];\n};\n\nexport const Memocomponent = React.memo<Props>(\n  ({ products }) => {\n    // eslint-disable-next-line no-console\n    console.log('memo', products);\n\n    return (\n      <div>\n        Memo\n        <ul>\n          {products.map(product => (\n            <li key={product.id}>\n              {product.name}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  },\n);\n","import React from 'react';\nimport './ProductList.scss';\n\nimport { ProductItem } from './ProductItem';\nimport { Product } from '../types/Product';\nimport { Memocomponent } from './Memocomponent';\n\ntype Props = {\n  products: Product[];\n};\n\ntype State = {\n  products: Product[];\n  activeId: number;\n  isTakenPosition: boolean;\n};\n\nexport class ProductList extends React.Component<Props, State> {\n  state = {\n    products: this.props.products,\n    activeId: 0,\n    isTakenPosition: false,\n  };\n\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    // eslint-disable-next-line no-console\n    // console.log('nextProps', nextProps, 'nextState', nextState);\n\n    // eslint-disable-next-line no-console\n    console.log(nextProps.products !== this.props.products\n      || nextState.activeId !== this.state.activeId\n      || nextState.isTakenPosition !== this.state.isTakenPosition\n      || nextState.products !== this.state.products ? 'shouldComponentUpdate true' : 'shouldComponentUpdate false');\n\n    return nextProps.products !== this.props.products\n      || nextState.activeId !== this.state.activeId\n      || nextState.isTakenPosition !== this.state.isTakenPosition\n      || nextState.products !== this.state.products;\n  }\n\n  keyPressHandler = (event: any) => {\n    const {\n      activeId,\n      isTakenPosition,\n      products,\n    } = this.state;\n\n    event.preventDefault();\n\n    switch (event.key) {\n      case 'w':\n        if (isTakenPosition) {\n          // eslint-disable-next-line no-console\n          console.log('take & move UP');\n\n          if (activeId > 0) {\n            // eslint-disable-next-line no-console\n            console.log(products[activeId - 1]);\n\n            // eslint-disable-next-line no-console\n            console.log(products[activeId]);\n\n            // eslint-disable-next-line no-console\n            console.log(products);\n\n            const newProducts: Product[] = [];\n            const newActiveId = activeId;\n\n            newProducts.push(...products.slice(0, activeId - 1));\n            newProducts.push(products[activeId]);\n            newProducts.push(products[activeId - 1]);\n            newProducts.push(...products.slice(activeId + 1));\n\n            this.setState((prevState) => ({\n              ...prevState,\n              products: newProducts,\n              activeId: newActiveId - 1,\n            }));\n          }\n        } else {\n          // eslint-disable-next-line no-console\n          console.log('move UP', this.state.activeId);\n\n          this.setState(prevState => ({\n            activeId: prevState.activeId > 1 ? prevState.activeId - 1 : 0,\n          }));\n        }\n\n        break;\n\n      case 's':\n        if (isTakenPosition) {\n          // eslint-disable-next-line no-console\n          console.log('take & move DOWN');\n\n          if (activeId < products.length - 1) {\n            // eslint-disable-next-line no-console\n            console.log(products[activeId - 1]);\n\n            // eslint-disable-next-line no-console\n            console.log(products[activeId]);\n\n            // eslint-disable-next-line no-console\n            console.log(products);\n\n            const newProducts = [];\n            const newActiveId = activeId + 1;\n\n            newProducts.push(...products.slice(0, activeId));\n            newProducts.push(products[activeId + 1]);\n            newProducts.push(products[activeId]);\n            newProducts.push(...products.slice(activeId + 2));\n\n            this.setState({\n              products: newProducts,\n              activeId: newActiveId,\n            });\n          }\n        } else {\n          // eslint-disable-next-line no-console\n          console.log('move DOWN', this.state.activeId);\n\n          this.setState(prevState => ({\n            activeId: prevState.activeId < products.length - 1\n              ? prevState.activeId + 1\n              : products.length - 1,\n          }));\n        }\n\n        break;\n\n      case 't':\n        this.setState(prevState => ({\n          isTakenPosition: !prevState.isTakenPosition,\n        }));\n\n        // eslint-disable-next-line no-console\n        console.log('take', this.state.isTakenPosition);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  sortByIdHandler = () => {\n    // eslint-disable-next-line no-console\n    console.log('sort by Id');\n\n    const currentActiveProductId = this.state.products[this.state.activeId].id;\n\n    // eslint-disable-next-line no-console\n    console.log('currentActiveProductId = ', currentActiveProductId);\n\n    const sortedProducts = [...this.state.products].sort((a, b) => a.id - b.id);\n    const newActiveId = sortedProducts.findIndex(item => item.id === currentActiveProductId);\n\n    // eslint-disable-next-line no-console\n    console.log('newActiveId = ', newActiveId);\n\n    this.setState(() => ({\n      products: sortedProducts,\n      activeId: newActiveId,\n    }));\n  };\n\n  sortByColorHandler = () => {\n    // eslint-disable-next-line no-console\n    console.log('sort by color');\n\n    const currentActiveProductId = this.state.products[this.state.activeId].id;\n\n    // eslint-disable-next-line no-console\n    console.log('currentActiveProductId = ', currentActiveProductId);\n\n    const sortedProducts = [...this.state.products].sort((a, b) => a.color.localeCompare(b.color));\n\n    const newActiveId = sortedProducts.findIndex(item => item.id === currentActiveProductId);\n\n    // eslint-disable-next-line no-console\n    console.log('newActiveId = ', newActiveId);\n\n    this.setState(() => ({\n      products: sortedProducts,\n      activeId: newActiveId,\n    }));\n  };\n\n  sortByNameHandler = () => {\n    // eslint-disable-next-line no-console\n    console.log('sort by name');\n\n    const currentActiveProductId = this.state.products[this.state.activeId].id;\n\n    // eslint-disable-next-line no-console\n    console.log('currentActiveProductId = ', currentActiveProductId);\n\n    const sortedProducts = [...this.state.products].sort((a, b) => a.name.localeCompare(b.name));\n\n    const newActiveId = sortedProducts.findIndex(item => item.id === currentActiveProductId);\n\n    // eslint-disable-next-line no-console\n    console.log('newActiveId = ', newActiveId);\n\n    this.setState(() => ({\n      products: sortedProducts,\n      activeId: newActiveId,\n    }));\n  };\n\n  clickActiveHandler = (event: any, productsKey: number) => {\n    this.setState(() => ({\n      activeId: productsKey,\n      isTakenPosition: false,\n    }));\n  };\n\n  clickTakeHandler = (event: any, productsKey: number) => {\n    event.preventDefault();\n\n    if (this.state.activeId === productsKey) {\n      this.setState((prevState) => ({\n        ...prevState,\n        isTakenPosition: !prevState.isTakenPosition,\n      }));\n    } else {\n      this.setState(() => ({\n        activeId: productsKey,\n        isTakenPosition: true,\n      }));\n    }\n  };\n\n  render() {\n    const {\n      activeId,\n      isTakenPosition,\n      products,\n    } = this.state;\n\n    // eslint-disable-next-line no-console\n    console.log('render ProductList');\n\n    return (\n      <div className=\"ProductList\">\n        <div className=\"ProductList__keys\">\n          <p>W, S to move</p>\n          <p>T to take</p>\n        </div>\n        <p>\n          name: &nbsp;\n          {products[activeId].name}\n        </p>\n        <p>\n          activeId:&nbsp;\n          {activeId}\n        </p>\n        <p>\n          isTakenPosition &nbsp;\n          {isTakenPosition ? 'true' : 'false'}\n        </p>\n\n        <button\n          type=\"button\"\n          onClick={this.sortByIdHandler}\n          style={\n            {\n              border: '2px solid black',\n              borderRadius: '10px',\n              width: '200px',\n              margin: '2px',\n            }\n          }\n        >\n          sort by id\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.sortByColorHandler}\n          style={\n            {\n              border: '2px solid black',\n              borderRadius: '10px',\n              width: '200px',\n              margin: '2px',\n            }\n          }\n        >\n          sort by color\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.sortByNameHandler}\n          style={\n            {\n              border: '2px solid black',\n              borderRadius: '10px',\n              width: '200px',\n              margin: '2px',\n            }\n          }\n        >\n          sort by name\n        </button>\n\n        {/* <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => {\n            // eslint-disable-next-line no-console\n            console.log('up');\n\n            return (event: any) => this.clickTakeHandler(event, this.state.activeId);\n          }}\n        >\n        </button> */}\n\n        <div className=\"productFlexBox\">\n          <ul className=\"productFlexBox__ProductList ProductList\">\n            {products.map((product, i) => {\n              return (\n                <li\n                  key={product.id}\n                >\n                  <ProductItem\n                    productsKey={i}\n                    id={product.id}\n                    name={product.name}\n                    color={product.color}\n                    activeId={activeId}\n                    isTakenPosition={isTakenPosition}\n                    keyPressHandler={this.keyPressHandler}\n                    clickActiveHandler={this.clickActiveHandler}\n                    clickTakeHandler={this.clickTakeHandler}\n                  />\n                </li>\n              );\n            })}\n          </ul>\n          <div className=\"productFlexBox__MemoComponent\">\n            <Memocomponent\n              products={this.state.products}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport './App.scss';\nimport { ProductList } from './components/ProductList';\nimport productsFromServer from './data/data.json';\nimport { Product } from './types/Product';\n\ntype State = {\n  products: Product[];\n  age: number;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    products: productsFromServer,\n    age: 1,\n  };\n\n  addYear = () => {\n    this.setState((prevState) => ({\n      age: prevState.age + 1,\n    }));\n  };\n\n  render() {\n    // eslint-disable-next-line no-console\n    console.log('render App');\n\n    return (\n      <div className=\"App\">\n        <h2>\n          age:&nbsp;\n          {this.state.age}\n        </h2>\n        <button\n          type=\"button\"\n          onClick={this.addYear}\n          className=\"App__button\"\n        >\n          Age ++\n        </button>\n\n        <ProductList products={this.state.products} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}