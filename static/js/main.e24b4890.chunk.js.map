{"version":3,"sources":["components/ProductItem.tsx","components/Memocomponent.tsx","components/ProductList.tsx","App.tsx","index.tsx"],"names":["ProductItem","buttonColorStyle","productsKey","activeId","isTakenPosition","this","props","id","color","name","keyPressHandler","clickActiveHandler","clickTakeHandler","type","onKeyPress","onClick","event","onContextMenu","style","border","borderRadius","backgroundColor","width","margin","React","Component","Memocomponent","memo","products","console","log","map","product","ProductList","state","preventDefault","key","newProducts","newActiveId","push","slice","setState","prevState","length","sortByIdHandler","currentActiveProductId","sortedProducts","sort","a","b","findIndex","item","sortByColorHandler","localeCompare","sortByNameHandler","nextProps","nextState","className","i","App","productsFromServer","age","addYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e24b4890.chunk.js","sourcesContent":["import React from 'react';\n// import classNames from 'classnames';\n\ntype Props = {\n  productsKey: number;\n  id: number;\n  name: string;\n  color: string;\n  activeId: number;\n  isTakenPosition: boolean;\n  keyPressHandler: (event: any) => void;\n  clickActiveHandler: (event: any, id: number) => void;\n  clickTakeHandler: (event: any, id: number) => void;\n};\n\nexport class ProductItem extends React.Component<Props> {\n  buttonColorStyle = (\n    productsKey: number,\n    activeId: number,\n    isTakenPosition: boolean,\n  ) => {\n    if (productsKey === activeId) {\n      return isTakenPosition ? 'yellow' : 'grey';\n    }\n\n    return 'white';\n  };\n\n  render() {\n    const {\n      productsKey,\n      id,\n      color,\n      name,\n      activeId,\n      isTakenPosition,\n      keyPressHandler,\n      clickActiveHandler,\n      clickTakeHandler,\n    } = this.props;\n\n    // eslint-disable-next-line no-console\n    // console.log('ProductItem', name);\n\n    return (\n      <div>\n        <button\n          type=\"button\"\n          onKeyPress={keyPressHandler}\n          onClick={event => clickActiveHandler(event, productsKey)}\n          onContextMenu={event => clickTakeHandler(event, productsKey)}\n          style={\n            {\n              border: `2px solid ${color}`,\n              borderRadius: '10px',\n              backgroundColor: this.buttonColorStyle(productsKey, activeId, isTakenPosition),\n              width: '200px',\n              margin: '2px',\n            }\n          }\n        >\n          {productsKey}\n          &nbsp;\n          {name}\n          &nbsp;\n          {color}\n          &nbsp;\n          {id}\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Product } from '../types/Product';\n\ntype Props = {\n  products: Product[];\n};\n\nexport const Memocomponent = React.memo<Props>(\n  ({ products }) => {\n    // eslint-disable-next-line no-console\n    console.log('memo', products);\n\n    return (\n      <div>\n        Memo\n        <ul>\n          {products.map(product => (\n            <li key={product.id}>\n              {product.name}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  },\n);\n","import React from 'react';\nimport './ProductList.scss';\n\nimport { ProductItem } from './ProductItem';\nimport { Product } from '../types/Product';\nimport { Memocomponent } from './Memocomponent';\n\ntype Props = {\n  products: Product[];\n};\n\ntype State = {\n  products: Product[];\n  activeId: number;\n  isTakenPosition: boolean;\n};\n\nexport class ProductList extends React.Component<Props, State> {\n  state = {\n    products: this.props.products,\n    activeId: 0,\n    isTakenPosition: false,\n  };\n\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    // eslint-disable-next-line no-console\n    // console.log('nextProps', nextProps, 'nextState', nextState);\n\n    // eslint-disable-next-line no-console\n    console.log(nextProps.products !== this.props.products\n      || nextState.activeId !== this.state.activeId\n      || nextState.isTakenPosition !== this.state.isTakenPosition\n      || nextState.products !== this.state.products ? 'shouldComponentUpdate true' : 'shouldComponentUpdate false');\n\n    return nextProps.products !== this.props.products\n      || nextState.activeId !== this.state.activeId\n      || nextState.isTakenPosition !== this.state.isTakenPosition\n      || nextState.products !== this.state.products;\n  }\n\n  keyPressHandler = (event: any) => {\n    const {\n      activeId,\n      isTakenPosition,\n      products,\n    } = this.state;\n\n    event.preventDefault();\n\n    switch (event.key) {\n      case 'w':\n        if (isTakenPosition) {\n          // eslint-disable-next-line no-console\n          console.log('take & move UP');\n\n          if (activeId > 0) {\n            // eslint-disable-next-line no-console\n            console.log(products[activeId - 1]);\n\n            // eslint-disable-next-line no-console\n            console.log(products[activeId]);\n\n            // eslint-disable-next-line no-console\n            console.log(products);\n\n            const newProducts: Product[] = [];\n            const newActiveId = activeId;\n\n            newProducts.push(...products.slice(0, activeId - 1));\n            newProducts.push(products[activeId]);\n            newProducts.push(products[activeId - 1]);\n            newProducts.push(...products.slice(activeId + 1));\n\n            this.setState((prevState) => ({\n              ...prevState,\n              products: newProducts,\n              activeId: newActiveId - 1,\n            }));\n          }\n        } else {\n          // eslint-disable-next-line no-console\n          console.log('move UP', this.state.activeId);\n\n          this.setState(prevState => ({\n            activeId: prevState.activeId > 1 ? prevState.activeId - 1 : 0,\n          }));\n        }\n\n        break;\n\n      case 's':\n        if (isTakenPosition) {\n          // eslint-disable-next-line no-console\n          console.log('take & move DOWN');\n\n          if (activeId < products.length) {\n            // eslint-disable-next-line no-console\n            console.log(products[activeId - 1]);\n\n            // eslint-disable-next-line no-console\n            console.log(products[activeId]);\n\n            // eslint-disable-next-line no-console\n            console.log(products);\n\n            const newProducts = [];\n            const newActiveId = activeId + 1;\n\n            newProducts.push(...products.slice(0, activeId - 1));\n            newProducts.push(products[activeId]);\n            newProducts.push(products[activeId - 1]);\n            newProducts.push(...products.slice(activeId + 1));\n\n            this.setState({\n              products: newProducts,\n              activeId: newActiveId,\n            });\n          }\n        } else {\n          // eslint-disable-next-line no-console\n          console.log('move DOWN', this.state.activeId);\n\n          this.setState(prevState => ({\n            activeId: prevState.activeId < products.length\n              ? prevState.activeId + 1\n              : products.length,\n          }));\n        }\n\n        // this.setState(prevState => ({\n        //   activeId:\n        //     prevState.activeId < this.props.products.length\n        //       ? prevState.activeId + 1\n        //       : this.props.products.length,\n        // }));\n\n        // // eslint-disable-next-line no-console\n        // console.log('move down', this.state.activeId);\n        break;\n\n      case 't':\n        this.setState(prevState => ({\n          isTakenPosition: !prevState.isTakenPosition,\n        }));\n\n        // eslint-disable-next-line no-console\n        console.log('take', this.state.isTakenPosition);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  sortByIdHandler = () => {\n    // eslint-disable-next-line no-console\n    console.log('sort by Id');\n\n    const currentActiveProductId = this.state.products[this.state.activeId].id;\n\n    // eslint-disable-next-line no-console\n    console.log('currentActiveProductId = ', currentActiveProductId);\n\n    const sortedProducts = [...this.state.products].sort((a, b) => a.id - b.id);\n    const newActiveId = sortedProducts.findIndex(item => item.id === currentActiveProductId);\n\n    // eslint-disable-next-line no-console\n    console.log('newActiveId = ', newActiveId);\n\n    this.setState(() => ({\n      products: sortedProducts,\n      activeId: newActiveId,\n    }));\n  };\n\n  sortByColorHandler = () => {\n    // eslint-disable-next-line no-console\n    console.log('sort by color');\n\n    const currentActiveProductId = this.state.products[this.state.activeId].id;\n\n    // eslint-disable-next-line no-console\n    console.log('currentActiveProductId = ', currentActiveProductId);\n\n    const sortedProducts = [...this.state.products].sort((a, b) => a.color.localeCompare(b.color));\n\n    const newActiveId = sortedProducts.findIndex(item => item.id === currentActiveProductId);\n\n    // eslint-disable-next-line no-console\n    console.log('newActiveId = ', newActiveId);\n\n    this.setState(() => ({\n      products: sortedProducts,\n      activeId: newActiveId,\n    }));\n  };\n\n  sortByNameHandler = () => {\n    // eslint-disable-next-line no-console\n    console.log('sort by name');\n\n    const currentActiveProductId = this.state.products[this.state.activeId].id;\n\n    // eslint-disable-next-line no-console\n    console.log('currentActiveProductId = ', currentActiveProductId);\n\n    const sortedProducts = [...this.state.products].sort((a, b) => a.name.localeCompare(b.name));\n\n    const newActiveId = sortedProducts.findIndex(item => item.id === currentActiveProductId);\n\n    // eslint-disable-next-line no-console\n    console.log('newActiveId = ', newActiveId);\n\n    this.setState(() => ({\n      products: sortedProducts,\n      activeId: newActiveId,\n    }));\n  };\n\n  clickActiveHandler = (event: any, productsKey: number) => {\n    this.setState(() => ({\n      activeId: productsKey,\n      isTakenPosition: false,\n    }));\n  };\n\n  clickTakeHandler = (event: any, productsKey: number) => {\n    event.preventDefault();\n\n    if (this.state.activeId === productsKey) {\n      this.setState((prevState) => ({\n        ...prevState,\n        isTakenPosition: !prevState.isTakenPosition,\n      }));\n    } else {\n      this.setState(() => ({\n        activeId: productsKey,\n        isTakenPosition: true,\n      }));\n    }\n  };\n\n  render() {\n    const {\n      activeId,\n      isTakenPosition,\n      products,\n    } = this.state;\n\n    // eslint-disable-next-line no-console\n    console.log('render ProductList');\n\n    return (\n      <>\n        <p>\n          name: &nbsp;\n          {products[activeId].name}\n        </p>\n        <p>\n          activeId:&nbsp;\n          {activeId}\n        </p>\n        <p>\n          isTakenPosition &nbsp;\n          {isTakenPosition ? 'true' : 'false'}\n        </p>\n\n        <button\n          type=\"button\"\n          onClick={this.sortByIdHandler}\n          style={\n            {\n              border: '2px solid black',\n              borderRadius: '10px',\n              width: '200px',\n              margin: '2px',\n            }\n          }\n        >\n          sort by id\n        </button>\n        <br></br>\n        <button\n          type=\"button\"\n          onClick={this.sortByColorHandler}\n          style={\n            {\n              border: '2px solid black',\n              borderRadius: '10px',\n              width: '200px',\n              margin: '2px',\n            }\n          }\n        >\n          sort by color\n        </button>\n        <br></br>\n        <button\n          type=\"button\"\n          onClick={this.sortByNameHandler}\n          style={\n            {\n              border: '2px solid black',\n              borderRadius: '10px',\n              width: '200px',\n              margin: '2px',\n            }\n          }\n        >\n          sort by name\n        </button>\n\n        <div className=\"productFlexBox\">\n          <ul className=\"productFlexBox__ProductList ProductList\">\n            {products.map((product, i) => {\n              return (\n                <li\n                  key={product.id}\n                >\n                  <ProductItem\n                    productsKey={i}\n                    id={product.id}\n                    name={product.name}\n                    color={product.color}\n                    activeId={activeId}\n                    isTakenPosition={isTakenPosition}\n                    keyPressHandler={this.keyPressHandler}\n                    clickActiveHandler={this.clickActiveHandler}\n                    clickTakeHandler={this.clickTakeHandler}\n                  />\n                </li>\n              );\n            })}\n          </ul>\n          <div className=\"productFlexBox__MemoComponent\">\n            <Memocomponent\n              products={this.state.products}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nimport './App.scss';\nimport { ProductList } from './components/ProductList';\nimport productsFromServer from './data/data.json';\nimport { Product } from './types/Product';\n\ntype State = {\n  products: Product[];\n  age: number;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    products: productsFromServer,\n    age: 1,\n  };\n\n  addYear = () => {\n    this.setState((prevState) => ({\n      age: prevState.age + 1,\n    }));\n  };\n\n  render() {\n    // eslint-disable-next-line no-console\n    console.log('render App');\n\n    return (\n      <div className=\"App\">\n        <h2>\n          age:&nbsp;\n          {this.state.age}\n        </h2>\n        <button\n          type=\"button\"\n          onClick={this.addYear}\n          style={\n            {\n              border: '2px solid black',\n              borderRadius: '10px',\n              width: '200px',\n              margin: '2px',\n            }\n          }\n        >\n          Age ++\n        </button>\n\n        <ProductList products={this.state.products} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}